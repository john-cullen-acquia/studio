#!/bin/bash

FUNCTION_CALL=$1
FIRST_ARG=$2
SECOND_ARG=$3

# Makes a cleaner looking result in the terminal
echo ""

### Help
# To use the Help follow the example below
#
# @command
# 1.  <purencoolstudio help> to see everything
# 2.  <purencoolstudio help <title eg, Help >> to see item
#
function helpText {
  sed -e "/### $FIRST_ARG/,/##/!d" purencoolstudio
}
##


### DockerInstalled
# Test to see if docker is installed
#
# @command <di>
#
##
function dockerInstalled {
 if echo "$(docker -v)" | grep -q "version"; then
    echo "true"
 else
    echo "false"
 fi
}


### PullDockerImages
# The following docker images need to be pulled
#
# @command <pdi>
#
##
function pullDockerImages {
  echo "docker pull images"
}

### InstallPurencoolStudioSoftware
# Install Purencool Studio software from your computer.
#
# @command <sis>
#
##
function installPurencoolStudioSoftware {
  echo "Current path: "$(pwd)
  echo "Please provide a path for data storage or use "$HOME"/purencool_studio by pressing enter: "
  read pathToBeUsed

  if [ -z "$pathToBeUsed" ]; then
     mkdir "${HOME}/purencool_studio"
     mkdir "${HOME}/purencool_studio/sites"
     mkdir "${HOME}/purencool_studio/.system"
     mkdir "${HOME}/purencool_studio/.system/incoming"
     mkdir "${HOME}/purencool_studio/.system/history"
     mkdir "${HOME}/purencool_studio/.system/logs"
     echo "A directory was created in: "${HOME}"/purencool_studio"
  else
     mkdir "$pathToBeUsed"
     mkdir "$pathToBeUsed/sites"
     mkdir "$pathToBeUsed/.system"
     mkdir "$pathToBeUsed/.system/incoming"
     mkdir "$pathToBeUsed/.system/history"
     mkdir "$pathToBeUsed/.system/logs"

    echo "A directory was created in: $pathToBeUsed"
  fi

  # docker pull purencool/purencool_studio:latest
  echo "Purencool Studio software has been installed"
}


### InstallAndStartPurencoolStudioSoftware
# Install Purencool Studio software from your computer.
#
# @command <sisap>
#
##
function installPurencoolStudioSoftwareAndPS {
  installPurencoolStudioSoftware
  installPurencoolStudioPS
}


### InstallPurencoolStudioPS
# Install Purencool Studio PS.
#
# @command <sip>
#
##
function installPurencoolStudioPS {
  docker run --name=purencool_studio -d -p 3000:3000 -t purencool/purencool_studio:latest
  echo "Purencool Studio PS is now installed and running"
}



### RemovePurencoolStudioSoftware
# Removes Purencool Studio software from your computer.
#
# @command <srs>
#
##
function removePurencoolStudioSoftware {
  docker rmi -f purencool/purencool_studio
  echo "Purencool Studio software has been removed or does not exist"
}


### RemovePurencoolStudioPS
# Remove the studio docker process
#
# @command <srp>
#
##
function removePurencoolStudioPS {
  echo  $(docker rm purencool_studio)" has been removed"
}

### RunningPurencoolStudioPS
# Remove the studio docker process
#
# @command <rps>
#
##
function runningPurencoolStudioPS {
   docker ps -f name=purencool_studio | grep -w purencool_studio
}


### StartPurencoolStudio
# Start the studio docker software
#
# @command <sst>
#
##
function startPurencoolStudio {
   echo  $(docker start purencool_studio)" has been started"
   docker ps -f name=purencool_studio | grep -w purencool_studio
}



### StopPurencoolStudio
# Stop the studio docker software
#
# @command <ssp>
#
##
function stopPurencoolStudio {
 echo  $(docker stop purencool_studio)" has been stopped"
}

### StopAndRemovePurencoolStudioPSAndSoftware
# Remove all PS and Software
#
# @command <ra>
#
##
function stopAndRemovePurencoolStudioPSAndSoftware {
  stopPurencoolStudio
  removePurencoolStudioPS
  removePurencoolStudioSoftware

}



if [ "$FUNCTION_CALL" = 'help'  ]; then

     helpText

elif [ "$FUNCTION_CALL" = 'di'  ]; then

     dockerDi=$(dockerInstalled)
     echo "Docker is installed: "$dockerDi
     if [ "$dockerDi" = 'false' ]; then
       echo  "In order to run this container you'll need docker installed."
       echo  "  1. https://docs.docker.com/windows/started"
       echo  "  2. https://docs.docker.com/mac/started/"
       echo  "  3. https://docs.docker.com/windows/started"
     fi

elif [ "$FUNCTION_CALL" = 'sis'  ]; then

     installPurencoolStudioSoftware

elif [ "$FUNCTION_CALL" = 'sip'  ]; then

     installPurencoolStudioPS

elif [ "$FUNCTION_CALL" = 'sisap'  ]; then

     installPurencoolStudioSoftwareAndPS

elif [ "$FUNCTION_CALL" = 'srp'  ]; then

     removePurencoolStudioPS

elif [ "$FUNCTION_CALL" = 'srs'  ]; then

     removePurencoolStudioSoftware

elif [ "$FUNCTION_CALL" = 'rps'  ]; then

     runningPurencoolStudioPS

elif [ "$FUNCTION_CALL" = 'sst'  ]; then

     startPurencoolStudio

elif [ "$FUNCTION_CALL" = 'ssp'  ]; then

     stopPurencoolStudio

elif [ "$FUNCTION_CALL" = 'ra'  ]; then

     stopAndRemovePurencoolStudioPSAndSoftware

elif [ "$FUNCTION_CALL" = 'pdi'  ]; then

     pullDockerImages

else

     helpText

fi

# Makes a cleaner looking result in the terminal
echo ""

### Commands
#  The list below are functions that can be used to help manage Purencool Studio
#  from the commandline. To use the command type <purencoolstudio help <title eg, Help >>
#
#  1. Help
#  2. DockerInstalled
#  3. InstallPurencoolStudioSoftware
#  4. InstallPurencoolStudioPS
#  5. PullDockerImages
#  6. RemovePurencoolStudioPS
#  7. RemovePurencoolStudioSoftware
#  8. RunningPurencoolStudioPS
#  9. StartPurencoolStudio
#  10. StopPurencoolStudio
#  11. StopAndRemovePurencoolStudioPSAndSoftware
##



