#!/bin/bash

FUNCTION_CALL=$1
FIRST_ARG=$2
SECOND_ARG=$3

# Makes a cleaner looking result in the terminal
echo ""

### GetConfig
# Gets Purencool Studios Global config
###
function getConfig() {
  local configRequestStr="$1"
  [[ -z $configRequestStr ]] && {
    echo "${FUNCNAME}(): config request variable not specified"
    exit 1
  }
  sed -e 's#.*::\(\)#\1#' <<<"$(grep "^$configRequestStr" ${HOME}/purencool_studio/.config/config)"
}

### Help
# To use the Help follow the example below
#
# @command
# 1.  <purencoolstudio help> to see everything
# 2.  <purencoolstudio help <title eg, Help >> to see item
#
function helpText() {
  sed -e "/### $FIRST_ARG/,/##/!d" purencoolstudio
}
##

### DockerInstalled
# Test to see if docker is installed
#
# @command <di>
#
##
function dockerInstalled() {
  if echo "$(docker -v)" | grep -q "version"; then
    echo "true"
  else
    echo "false"
  fi
}

### IDEPurencoolStudioPS
# Install IDE.
#
# @command <ide>
#
##
function IDEPurencoolStudioPS() {
  VAR_BASE_PATH=$(getConfig base_path)
  VAR_IDE_PORT=$(getConfig ide_port)
  #echo $VAR_BASE_PATH;
  docker run -it -d -p $VAR_IDE_PORT:3000  --name=purencool_studio_ide -v "$VAR_BASE_PATH:/home/project:cached" theiaide/theia-php:latest
}


### InstallPurencoolStudioSoftware
# Install Purencool Studio software from your computer.
#
# @command <sis>
#
##
function installPurencoolStudioSoftware() {
  echo "Current path: "$(pwd)
  echo "Please provide a path for data storage or use "$HOME"/purencool_studio by pressing enter: "
  read pathToBeUsed

  mkdir "${HOME}/purencool_studio"
  mkdir "${HOME}/purencool_studio/.system"
  mkdir "${HOME}/purencool_studio/.system/history"
  mkdir "${HOME}/purencool_studio/.system/history/purencool_studio"
  mkdir "${HOME}/purencool_studio/.system/history/purencool_studio_ide"
  mkdir "${HOME}/purencool_studio/.system/purencool_studio"
  mkdir "${HOME}/purencool_studio/.system/purencool_studio_system"
  mkdir "${HOME}/purencool_studio/.config"
  touch "${HOME}/purencool_studio/.config/config"
  echo "ide_port::3001" >>${HOME}/purencool_studio/.config/config
  echo "software_port::3000" >>${HOME}/purencool_studio/.config/config

  if [ -z "$pathToBeUsed" ]; then
    echo "base_path::"${HOME}/purencool_studio >>${HOME}/purencool_studio/.config/config
    echo "A directory was created in: "${HOME}"/purencool_studio"
    mkdir "${HOME}/purencool_studio/sites"
  else
    echo "base_path::"$pathToBeUsed >>${HOME}/purencool_studio/.config/config
    mkdir "$pathToBeUsed"
    mkdir "$pathToBeUsed""/sites"
    echo "A directory was created in: $pathToBeUsed"
  fi



  docker pull purencool/purencool_studio_system:latest
  docker pull purencool/purencool_studio:latest
  docker pull theiaide/theia-php:latest
  echo "Purencool Studio software has been installed"
}

### InstallAndStartPurencoolStudioSoftware
# Install Purencool Studio software from your computer.
#
# @command <sisap>
#
##
function installPurencoolStudioSoftwareAndPS() {
  installPurencoolStudioSoftware
  installPurencoolStudioPS
}

### InstallPurencoolStudioPS
# Install Purencool Studio PS.
#
# @command <sip>
#
##
function installPurencoolStudioPS() {
  VAR_PURENCOOL_STUDIO_PORT=$(getConfig purencool_studio_port)
  docker run --name=purencool_studio -d -p $VAR_PURENCOOL_STUDIO_PORT:3000 -t purencool/purencool_studio:latest
  echo "Purencool Studio PS is now installed and running"
}

### InstallPurencoolStudioSystemPS
# Install Purencool Studio System PS.
#
# @command <sisp>
#
##
function installPurencoolStudioSystemPS() {
 getConfig base_path

  #docker run --mount type=bind,source="$(pwd)"/test,target=/user/src/app/mntdir --name=purencool_studio_system -d  -t purencool_studio_system:latest
  #echo "Purencool Studio PS is now installed and running"
}

### RemovePurencoolStudioSoftware
# Removes Purencool Studio software from your computer.
#
# @command <srs>
#
##
function removePurencoolStudioSoftware() {
  docker rmi -f purencool/purencool_studio
  echo "Purencool Studio software has been removed or does not exist"
}

### RemovePurencoolStudioPS
# Remove the studio docker process
#
# @command <srp>
#
##
function removePurencoolStudioPS() {
  echo $(docker rm purencool_studio)" has been removed"
}

### RemovePurencoolStudioSystemSoftware
# Removes Purencool Studio System software from your computer.
#
# @command <srss>
#
##
function removePurencoolStudioSystemSoftware() {
  docker rmi -f purencool/purencool_studio_system
  echo "Purencool Studio System software has been removed or does not exist"
}

### RemovePurencoolStudioSystemPS
# Remove the studio system docker process
#
# @command <srsp>
#
##
function removePurencoolStudioSystemPS() {
  echo $(docker rm purencool_studio_system)" has been removed"
}

### RunningPurencoolStudioPS
# Remove the studio docker process
#
# @command <rps>
#
##
function runningPurencoolStudioPS() {
  docker ps -f name=purencool_studio | grep -w purencool_studio
}

### RunningPurencoolStudioSystemPS
# Remove the studio system docker process
#
# @command <rpss>
#
##
function runningPurencoolStudioSystemPS() {
  docker ps -f name=purencool_studio_system | grep -w purencool_studio_system
}

### StartPurencoolStudio
# Start the studio docker software
#
# @command <sst>
#
##
function startPurencoolStudio() {
  echo $(docker start purencool_studio)" has been started"
  docker ps -f name=purencool_studio | grep -w purencool_studio
}

### StartPurencoolStudioSystem
# Start the studio system docker software
#
# @command <ssts>
#
##
function startPurencoolStudioSystem() {
  echo $(docker start purencool_studio_system)" has been started"
  docker ps -f name=purencool_studio_system | grep -w purencool_studio_system
}

### StopPurencoolStudio
# Stop the studio docker software
#
# @command <ssp>
#
##
function stopPurencoolStudio() {
  echo $(docker stop purencool_studio)" has been stopped"
}

### StopPurencoolStudioSystem
# Stop the studio system docker software
#
# @command <ssps>
#
##
function stopPurencoolStudioSystem() {
  echo $(docker stop purencool_studio_system)" has been stopped"
}

### StopAndRemovePurencoolStudioPSAndSoftware
# Remove all PS and Software
#
# @command <ra>
#
##
function stopAndRemovePurencoolStudioPSAndSoftware() {
  stopPurencoolStudio
  removePurencoolStudioPS
  removePurencoolStudioSoftware
  stopPurencoolStudioSystem
  removePurencoolStudioSystemPS
  removePurencoolStudioSystemSoftware

}

if [ "$FUNCTION_CALL" = 'help' ]; then

  helpText

elif [ "$FUNCTION_CALL" = 'di' ]; then

  dockerDi=$(dockerInstalled)
  echo "Docker is installed: "$dockerDi
  if [ "$dockerDi" = 'false' ]; then
    echo "In order to run this container you'll need docker installed."
    echo "  1. https://docs.docker.com/windows/started"
    echo "  2. https://docs.docker.com/mac/started/"
    echo "  3. https://docs.docker.com/windows/started"
  fi

elif [ "$FUNCTION_CALL" = 'ide' ]; then

  IDEPurencoolStudioPS

elif [ "$FUNCTION_CALL" = 'sis' ]; then

  installPurencoolStudioSoftware

elif [ "$FUNCTION_CALL" = 'sip' ]; then

  installPurencoolStudioPS

elif [ "$FUNCTION_CALL" = 'sisp' ]; then

  installPurencoolStudioSystemPS

elif [ "$FUNCTION_CALL" = 'sisap' ]; then

  installPurencoolStudioSoftwareAndPS

elif [ "$FUNCTION_CALL" = 'srp' ]; then

  removePurencoolStudioPS

elif [ "$FUNCTION_CALL" = 'srsp' ]; then

  removePurencoolStudioSystemPS

elif
  [ "$FUNCTION_CALL" = 'srs' ]
then

  removePurencoolStudioSoftware

elif [ "$FUNCTION_CALL" = 'srss' ]; then

  removePurencoolStudioSystemSoftware

elif
  [ "$FUNCTION_CALL" = 'rps' ]
then

  runningPurencoolStudioPS

elif [ "$FUNCTION_CALL" = 'rpss' ]; then

  runningPurencoolStudioSystemPS

elif [ "$FUNCTION_CALL" = 'sst' ]; then

  startPurencoolStudio

elif [ "$FUNCTION_CALL" = 'ssts' ]; then

  startPurencoolStudioSystem

elif [ "$FUNCTION_CALL" = 'ssp' ]; then

  stopPurencoolStudio

elif [ "$FUNCTION_CALL" = 'ssps' ]; then

  stopPurencoolStudioSystem

elif [ "$FUNCTION_CALL" = 'ra' ]; then

  stopAndRemovePurencoolStudioPSAndSoftware

else

  helpText

fi

# Makes a cleaner looking result in the terminal
echo ""

### Commands
#  The list below are functions that can be used to help manage Purencool Studio
#  from the commandline. To use the command type <purencoolstudio help <title eg, Help >>
#
#  1. Help
#  2. DockerInstalled
#  3. IDEPurencoolStudioPS
#  4. InstallPurencoolStudioSoftware <sis>
#  5. InstallPurencoolStudioPS       <sip>
#  6. InstallPurencoolStudioSystemPS <sisp>
#  7. RemovePurencoolStudioPS
#  8. RemovePurencoolStudioSystemPS  --beta
#  9. RemovePurencoolStudioSoftware
#  10. RemovePurencoolStudioSystemSoftware --beta
#  11. RunningPurencoolStudioPS
#  12. RunningPurencoolStudioSystemPS --beta
#  13. StartPurencoolStudio
#  14. StartPurencoolStudioSystem --beta
#  15. StopPurencoolStudio
#  16. StopPurencoolStudioSystem --beta
#  17. StopAndRemovePurencoolStudioPSAndSoftware
##

# Global function tests
#getConfig
getConfig base_path
